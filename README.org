Unlike a traditional hydra, a `wk-hydra's entry and exit points
are associated with functions, not keys.  Its keys on the other
hand are defined by traditional, preexisting keymaps, which you
can tweak to your liking using your tool of choice. I highly
recommend
[[https://github.com/noctuid/general.el][general.el]]. `wk-hydra'
was written to avoid reinventing the wheel by creating elaborate
hydras for tried and true interfaces that already had them in all
but name. These include:

- `macrostep-mode'
- `edebug-mode'
- `debugger-mode'
- `org-babel-*'`
- `windresize'`
- many more

Defining a `wk-hydra' of arbitrary size is about as simple as it
gets. For example, here is my `macrostep' `wk-hydra' with every
single `macrostep' function on it:

#+BEGIN_SRC emacs-lisp
  (wk-hydra-def
   :toggle-funs '(macrostep-mode)
   :keymap 'macrostep-keymap
   :pseudo-mode t
   :pseudo-mode-fun #'macrostep-mode)
#+END_SRC

In that context, the following arguments are obvious:
- TOGGLE-FUNS :: Processed with `wk-hydra--toggle-funs'.
- SHOW-FUNS :: Processed with `wk-hydra--show-funs'.
- HIDE-FUNS :: Processed with `wk-hydra--hide-funs'.

Now to the slightly less obvious ones:

- KEYMAP :: The keymap to display in `wk-hydra'. If it is nil, it
  is assumed that the function you are calling will result in a
  `which-key--show-popup' call. This might be desirable if you
  wish to enable `wk-hydra' for `which-key-show-top-level' or
  something similar.

- PSEUDO-MODE :: Whether to create a pseudo-mode by setting an
  KEYMAP as an overriding transient keymap. This is handy if the
  function you are binding `wk-hydra' to isn't actually a mode,
  or is fighting for keybindings with other minor-modes. The
  keymap stops taking precedent over other keymaps once a key
  outside of it is pressed. See `set-transient-map' for
  details. In order to take advantage of this capability, it
  isn't enough to just call `wk-hydra-def'. You should bind it's
  return value \(a symbol\) to the key you plan to use to enter
  the PSEUDO-MODE. E.g.:

#+BEGIN_SRC emacs-lisp
  (my:elisp::general-def
    "m" '(:ignore t :wk "macrostep")
    "m." (wk-hydra-def
          :toggle-funs '(macrostep-mode)
          :keymap 'macrostep-keymap
          :pseudo-mode t
          :pseudo-mode-fun #'macrostep-mode)
    "me" #'macrostep-expand
    "mc" #'macrostep-collapse
    "mn" #'macrostep-next-macro
    "mp" #'macrostep-prev-macro)

#+END_SRC
 
- PSEUDO-MODE-FUN :: The command to create a PSEUDO-MODE out of.
